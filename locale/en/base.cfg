
logistic_belt2-device=Logistic belt controller
logistic_belt2-sushi=Sushi belt controller
logistic_belt2-uploader=Upload controller into a chest

[entity-name]
logistic_belt2-device=Logistic belt controller
logistic_belt2-sushi=Sushi belt controller
logistic_belt2-router=Logistic belt router
logistic_belt2-overflow=Overflow belt controller
logistic_belt2-uploader=Upload controller into a chest

[entity-description]
logistic_belt2-device=Logistic belt controller that control the flow of item through a portion of belt 
logistic_belt2-sushi=Sushi belt controller, an easy way to create a sushi belt
logistic_belt2-router=A chest that propagates the requests, also shares its contents with its neighbour routers. Support filters.
logistic_belt2-overflow=A controller that route items in overflow
logistic_belt2-uploader=Can upload items into a chest

[virtual-signal-name]

[mod-setting-name]
logistic_belt2-item_count=Max count of item in sushi belt
logistic_belt2-request_count=Maximum of request for a device
logistic_belt2-add_filter=Add filter to all chests
logistic_belt2-router_inventory_size=Inventory size of a router
logistic_belt2_sushi_item_count=Maximum count of item in sushi belt

[mod-setting-description]
logistic_belt2-item_count=Max count of item in sushi belt
logistic_belt2-request_count=Maximum of request for a device
logistic_belt2-add_filter=Add filter to all chests (normal, logistic, infinity)
logistic_belt2-router_inventory_size=Inventory size of a router

[technology-name]
logistic_belt2-tech=Manage belt based the items requested by the controller
logistic_belt2-router-tech=Router enhancement

[technology-description]
logistic_belt2-router-tech=Increment the max number of entity in a router by 2

[parameters_dialog]
title=Logistic belts

[logistic_belt2_sushi]
title=Sushi belt
lane1-items=Lane 1:
lane2-items=Lane 2:
slow_label=Slow belt speed:
request=Item to request on belt
request-count=Count of item to request on belt
lane-item=Item to send on belt
lane-item-tooltip=Item to send on belt
is_overflow=In overflow mode, the items in the container whose count exceed the input value are sent on the belt 
save=Save

[logistic_belt2_overflow]
title=Overflow device
items=Overflow items:
save=Save
overflow_item_tooltip=Overflow item to moves
overflow_count_tooltip=Overflow threshold for moving items

[parameters]
is_overflow=Overflow mode

[tooltip]

[button]
rebuild=(Re)start
stop=Stop
diag=Diagnostic
save=Save & Close

[message]
missing_input=There is not device to get items (no input)
missing_output=There is not device to request items (no output)
cannot_find_belt=Cannot find a belt to connect sushi controller
need_a_single_transport_belt=Logistic belts: need a single transport belt at the start of the belt
disconnect_logistic_bels=Disconnect logistic belt requests
connect_logistic_bels=Connect logistic belt requests

[logistic_belt2]
request_item_tooltip=Item to request
request_count_tooltip=Counf of item to request
provided_item=Provided item
io_buffer_size=Ouput buffer size : 
reset_message=Reset node
clean_message=Clean node
request-label=Requested items:
provide-label=Provided items:
restrictions-label=Restrictions:
import-content=Import chest content
delivery_tooltip=Delivery size
reset_tooltip= __CONTROL_LEFT_CLICK__ Start/Stop/Delete node depending on the current state of the node
reset_deleted=Node is deleted
reset_started=Netword is started (__1__ nodes)
reset_stopped=Network is stopped (__1__ nodes)
inspect_tooltip= __CONTROL_LEFT_CLICK__ Display inspector window and keep it opened until it is closed manually
purge_tooltip= __CONTROL_LEFT_CLICK__ Dispatch content of node to requester that can accept the items (if they have room for them)

[logistic_belt2-inspect]
title=Logistic belt inspector
overflow_items=Overflow items
unsatisfied_requests=Unsatisfied requests
stock=Stock
routing=Routing
provides=Provides
input=Input
output=Ouput
requests=Requests
